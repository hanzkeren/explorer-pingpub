import { AllowedTopLevelDomains, NameService, NameServiceLookupResult, NameServiceResolveResult, Network, RpcURLs } from './name-service';
export declare const services: {
    icns: string;
    ibcDomains: string;
    stargazeNames: string;
    archIds: string;
    spaceIds: string;
    sns: string;
    bdd: string;
    nibId: string;
    degeNS: string;
    celestialsId: string;
};
export declare const allowedTopLevelDomains: AllowedTopLevelDomains;
export declare class Registry {
    private network;
    private services;
    constructor(network: Network);
    registerService(service: NameService): void;
    private getService;
    listServices(): string[];
    setNetwork(network: Network): void;
    getNetwork(): Network;
    resolve(name: string, serviceID: string, options?: {
        allowedTopLevelDomains?: AllowedTopLevelDomains;
        rpcUrls?: RpcURLs;
    }): Promise<NameServiceResolveResult>;
    lookup(address: string, serviceID: string, options?: {
        rpcUrls?: RpcURLs;
    }): Promise<NameServiceLookupResult>;
    resolveAll(name: string, options?: {
        allowedTopLevelDomains?: AllowedTopLevelDomains;
        rpcUrls?: {
            [key: string]: {
                [key in Network]: string;
            };
        };
    }): Promise<Record<string, NameServiceResolveResult | null>>;
    lookupAll(address: string, options?: {
        rpcUrls?: {
            [key: string]: {
                [key in Network]: string;
            };
        };
    }): Promise<Record<string, NameServiceLookupResult | null>>;
}
